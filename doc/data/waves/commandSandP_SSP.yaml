signal:
  - name: "区分"
    # wave: " l.l.l.l.h"
    wave: " l.l...l.l........l.l...l.l.h"
    node: ".a.b...c.d........e.f...g.h.i"

  # - name: "区分"
  #   wave: "x=.=...=.=........=.=...=.=.x"
  #   data: [ "head",
  #           "slave address(W)",
  #           "data length",
  #           "binary data to write",
  #           "head",
  #           "slave address(R)",
  #           "data length",
  #           "tail"]
  - name: "コマンド"
    wave: "x=.=...=.=........=.=...=.=.x"
    data: [ "S",
            "0x?8 0x?0",
            "0x?0 0x?4",
            "0x?D ?E ?A ?D ?B ?E ?A ?F",
            "S",
            "0x?8 0x?1",
            "0x?0 0x?4",
            "P"]
  - name: "16進数(マスク = 0x30)"
    wave: "x=.=...=.=........=.=...=.=.x"
    data: [ "0x53",
            "0x38 0x30",
            "0x30 0x34",
            "0x3D 0x3E 0x3A 0x3D 0x3B 0x3E 0x3A 0x3F",
            "0x53",
            "0x38 0x31",
            "0x30 0x34",
            "0x50"]
  - name: "アスキー文字列"
    wave: "x=.=...=.=........=.=...=.=.x"
    data: [ '"S"',
            '"80"',
            '"04"',
            '"=>:=;>:?"',
            '"S"',
            '"81"',
            '"04"',
            '"P"']
edge:
      - a<->b head
      - b<->c slave address(W)
      - c<->d data length
      - d<->e binary data to write
      - e<->f head
      - f<->g slave address(R)
      - g<->h data length
      - h<->i tail
